""" Функция join для строковых элементов - разделяет список на элементы,
делает из списка строку"""
# List_1 = ["H", "e", "l", "l", "o"]
# print('  '.join(List_1))

""" Функция split для строковых элементов - создаст массив из слов,
делает из строки список"""
# stroka = 'Hello world Moscow Name'
# print(stroka.split("o"))
    # итог ['Hell', ' w', 'rld M', 'sc', 'w Name']

""" Посчитает количество слов в созданном массиве, т.е. длину списка"""
# stroka = 'Hello world Moscow Name'
# print(len(stroka.split(" ")))

""" Разделить на символы, включая пробелы"""
# stroka = 'Hello world Moscow Name'
# List_1 = []
# for i in stroka:
#     List_1.append(i)
# print(List_1)  # ['H', 'e', 'l', 'l', 'o', ' ', 'w', 'o', 'r', 'l', 'd', ' ', 'M', 'o', 's', 'c', 'o', 'w', ' ', 'N', 'a', 'm', 'e']
# print(len(List_1)) # и посчитает символы

""" Напишите программу, которая принимает на вход
строку, и отслеживает, сколько раз каждый символ уже 
встречался. Количество повторов добавляется к символам
с помощью постфикса формата _n. 
дано: a a a b c a a d c d d
итог: a a_1 a_2 b c a_3 a_4 d c_1 d_1 d_2
Использовать функцию .split()"""
# stroka = input('Введите текст: ').split()
# stroka_1 = {}
# for i in stroka:
#     if i in stroka_1:
#         stroka_1[i] += 1
#         print(f'{i}_{stroka_1[i]}', end = " ")
#     else:
#         print(i, end = " ")
#         stroka_1[i] = 0

""" Задача №27. Общее обсуждение
Пользователь вводит текст(строка). Словом считается
последовательность непробельных символов идущих
подряд, слова разделены одним или большим числом
пробелов или символами конца строки.Определите,
сколько различных слов содержится в этом тексте.
Input: She sells sea shells on the sea shore; The shells that she sells are sea shells I'm sure. 
So if she sells sea shells on the sea shore, I'm sure that the shells are sea shore shells.
Output: 19 """
   # РЕШЕНИЕ 1
# text = input('Введите текст: ').lower().split()
# text1 = {}
# sum = 0
# for i in text:
#     if i not in text1:
#         text1[i] = i
#         sum += 1
# print(f'В тексте {sum} неповторяющихся слов')

   # РЕШЕНИЕ 2
# print(len(set(input('Введите текст: ').lower().split())))
   # вводим input текст -> преобразуем lower в маленькие буквы -> разбиваем split на слова -> 
   # преобразуем в множество set, которое не может содержать повторы -> считаем len размер множества

   # РЕШЕНИЕ 3
# text = input('Введите текст: ').split()
# set_result = set()
# for i in text:
#     set_result.add(i.lower())
# print(f'В тексте {len(set_result)} неповторяющихся слов')
   
   # ВО ВСЕХ РЕШЕНИЯХ НЕ РАСПОЗНАЕТ ЗНАКИ: например, 'ТЫ' и 'ТЫ,' будут разными словами!

""" Задача №29. Решение в группах
Ваня и Петя поспорили, кто быстрее решит следующую задачу: “Задана последовательность
неотрицательных целых чисел. Требуется определить значение наибольшего элемента
последовательности, которая завершается первым встретившимся нулем (число 0 не входит в
последовательность)”. Однако 2 друга оказались не такими смышлеными. Никто из ребят не смог до
конца сделать это задание. Они решили так: у кого будет меньше ошибок в коде, тот и выиграл спор.
За помощью товарищи обратились к Вам, студентам.
Примечание: Программные коды на следующих слайдах"""

# n = int(input())
# max_number = -1
# while n != 0:
#     if max_number < n:
#         max_number = n
#     n = int(input())
# print(f'Ответ: {max_number}')